/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as ProjectsProjectSlugImport } from './routes/projects/$projectSlug'
import { Route as ProjectsProjectSlugBacklogImport } from './routes/projects_/$projectSlug/backlog'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectSlugRoute = ProjectsProjectSlugImport.update({
  id: '/projects/$projectSlug',
  path: '/projects/$projectSlug',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsProjectSlugBacklogRoute = ProjectsProjectSlugBacklogImport.update(
  {
    id: '/projects_/$projectSlug/backlog',
    path: '/projects/$projectSlug/backlog',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectSlug': {
      id: '/projects/$projectSlug'
      path: '/projects/$projectSlug'
      fullPath: '/projects/$projectSlug'
      preLoaderRoute: typeof ProjectsProjectSlugImport
      parentRoute: typeof rootRoute
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof rootRoute
    }
    '/projects_/$projectSlug/backlog': {
      id: '/projects_/$projectSlug/backlog'
      path: '/projects/$projectSlug/backlog'
      fullPath: '/projects/$projectSlug/backlog'
      preLoaderRoute: typeof ProjectsProjectSlugBacklogImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects/$projectSlug': typeof ProjectsProjectSlugRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$projectSlug/backlog': typeof ProjectsProjectSlugBacklogRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects/$projectSlug': typeof ProjectsProjectSlugRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$projectSlug/backlog': typeof ProjectsProjectSlugBacklogRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/projects/$projectSlug': typeof ProjectsProjectSlugRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects_/$projectSlug/backlog': typeof ProjectsProjectSlugBacklogRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/projects/$projectSlug'
    | '/projects'
    | '/projects/$projectSlug/backlog'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/projects/$projectSlug'
    | '/projects'
    | '/projects/$projectSlug/backlog'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/projects/$projectSlug'
    | '/projects/'
    | '/projects_/$projectSlug/backlog'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ProjectsProjectSlugRoute: typeof ProjectsProjectSlugRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjectsProjectSlugBacklogRoute: typeof ProjectsProjectSlugBacklogRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ProjectsProjectSlugRoute: ProjectsProjectSlugRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjectsProjectSlugBacklogRoute: ProjectsProjectSlugBacklogRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/about",
        "/projects/$projectSlug",
        "/projects/",
        "/projects_/$projectSlug/backlog"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/about": {
      "filePath": "about.jsx"
    },
    "/projects/$projectSlug": {
      "filePath": "projects/$projectSlug.jsx"
    },
    "/projects/": {
      "filePath": "projects/index.jsx"
    },
    "/projects_/$projectSlug/backlog": {
      "filePath": "projects_/$projectSlug/backlog.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
